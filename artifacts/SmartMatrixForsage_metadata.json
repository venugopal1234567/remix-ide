{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "ownerAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "matrix",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "level",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "EarningsCredited",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "matrix",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "level",
						"type": "uint8"
					}
				],
				"name": "MissedEthReceive",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "referrer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "matrix",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "level",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "place",
						"type": "uint8"
					}
				],
				"name": "NewUserPlace",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "referrer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "userId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "referrerId",
						"type": "uint256"
					}
				],
				"name": "Registration",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "currentReferrer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "matrix",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "level",
						"type": "uint8"
					}
				],
				"name": "Reinvest",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "matrix",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "level",
						"type": "uint8"
					}
				],
				"name": "SentExtraEthDividends",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "referrer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "matrix",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "level",
						"type": "uint8"
					}
				],
				"name": "Upgrade",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdrawal",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "LAST_LEVEL",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "matrix",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "level",
						"type": "uint8"
					}
				],
				"name": "buyNewLevel",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "level",
						"type": "uint8"
					}
				],
				"name": "findFreeX3Referrer",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getContractBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "getUserBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalEarned",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "availableBalance",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "idToAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "isUserExists",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lastUserId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"name": "levelPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "referrerAddress",
						"type": "address"
					}
				],
				"name": "registrationExt",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "userIds",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "users",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "referrer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "partnersCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalEarned",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "availableBalance",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "level",
						"type": "uint8"
					}
				],
				"name": "usersActiveX3Levels",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "level",
						"type": "uint8"
					}
				],
				"name": "usersX3Matrix",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					},
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdrawAmount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"details": "Modified version with working withdrawals and simplified single-matrix system  Key Features: - User registration under referrers - 12 progressive levels (0.025 ETH to 51.2 ETH) - X3 matrix: 3 referral slots per level - Automatic matrix cycling and reinvestment - Balance tracking with withdrawal functionality  Changes from original Forsage: - Removed X6 matrix (complexity reduction) - Added working withdrawal system - Improved balance tracking (totalEarned + availableBalance) - Updated to Solidity 0.8+ (built-in overflow protection)",
			"kind": "dev",
			"methods": {
				"buyNewLevel(uint8,uint8)": {
					"details": "User must own previous level. Payment must match level price.",
					"params": {
						"level": "Level to purchase (2-12)",
						"matrix": "Matrix type (must be 1 for X3, X6 removed)"
					}
				},
				"constructor": {
					"details": "Owner is pre-registered with all levels active",
					"params": {
						"ownerAddress": "Address to set as owner (gets user ID 1)"
					}
				},
				"findFreeX3Referrer(address,uint8)": {
					"details": "Walks up referrer chain until finding active user",
					"params": {
						"level": "Level to check",
						"userAddress": "Starting user"
					},
					"returns": {
						"_0": "address First referrer with level active"
					}
				},
				"getContractBalance()": {
					"returns": {
						"_0": "uint256 Contract balance in wei"
					}
				},
				"getUserBalance(address)": {
					"params": {
						"_user": "Address to query"
					},
					"returns": {
						"availableBalance": "Withdrawable balance",
						"totalEarned": "Lifetime earnings"
					}
				},
				"isUserExists(address)": {
					"params": {
						"user": "Address to check"
					},
					"returns": {
						"_0": "bool True if user is registered"
					}
				},
				"registrationExt(address)": {
					"details": "Requires exactly 0.05 ETH payment. Activates level 1 automatically.",
					"params": {
						"referrerAddress": "Existing user to use as referrer"
					}
				},
				"usersActiveX3Levels(address,uint8)": {
					"params": {
						"level": "Level to check (1-12)",
						"userAddress": "User to check"
					},
					"returns": {
						"_0": "bool True if level is active"
					}
				},
				"usersX3Matrix(address,uint8)": {
					"params": {
						"level": "Level to query (1-12)",
						"userAddress": "User to query"
					},
					"returns": {
						"_0": "currentReferrer User's upline",
						"_1": "referrals Array of referral addresses",
						"_2": "blocked True if matrix blocked"
					}
				},
				"withdraw()": {
					"details": "Transfers all availableBalance to caller"
				},
				"withdrawAmount(uint256)": {
					"params": {
						"_amount": "Amount in wei to withdraw"
					}
				}
			},
			"title": "SmartMatrixForsage",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"LAST_LEVEL()": {
					"notice": "Total number of levels"
				},
				"buyNewLevel(uint8,uint8)": {
					"notice": "Purchase a new level"
				},
				"constructor": {
					"notice": "Initialize contract with owner"
				},
				"findFreeX3Referrer(address,uint8)": {
					"notice": "Find the first active referrer up the chain for a level"
				},
				"getContractBalance()": {
					"notice": "Get total ETH held by contract"
				},
				"getUserBalance(address)": {
					"notice": "Get user's balance information"
				},
				"idToAddress(uint256)": {
					"notice": "Address lookup by user ID"
				},
				"isUserExists(address)": {
					"notice": "Check if user exists"
				},
				"lastUserId()": {
					"notice": "Next user ID to assign"
				},
				"levelPrice(uint8)": {
					"notice": "Price in wei for each level"
				},
				"owner()": {
					"notice": "Contract owner (immutable after deployment)"
				},
				"registrationExt(address)": {
					"notice": "Register a new user under a referrer"
				},
				"userIds(uint256)": {
					"notice": "Address lookup by user ID (duplicate for compatibility)"
				},
				"users(address)": {
					"notice": "User data by address"
				},
				"usersActiveX3Levels(address,uint8)": {
					"notice": "Check if level is active for user"
				},
				"usersX3Matrix(address,uint8)": {
					"notice": "Get matrix information for user at level"
				},
				"withdraw()": {
					"notice": "Withdraw entire available balance"
				},
				"withdrawAmount(uint256)": {
					"notice": "Withdraw specific amount"
				}
			},
			"notice": "Multi-level marketing smart contract with X3 matrix structure",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/SmartMatrixForsage.sol": "SmartMatrixForsage"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/SmartMatrixForsage.sol": {
			"keccak256": "0xeffa53481e118992a65ce65b49e578e058356db86df6f688b5c021e7a3238f50",
			"license": "MIT",
			"urls": [
				"bzz-raw://35f0226f402b1702ae51024da0dbcb548d59b9804ec5c4702835f21bfb21adc0",
				"dweb:/ipfs/QmVbxqn4gnYNgHPsDKLcJNRxMfjs8BhpoGGU9TJxQMAinD"
			]
		}
	},
	"version": 1
}